1、API出参格式：同一个服务不同的路由，出参格式尽量一致
2、API入参格式：干净利落，一个字典
3、API日志规范：
    对于header服务只做接收，不传则为空，服务不做强校验,header和content的内容写入日志
    核心代码，尽量每个方法都写try，except捕获错误，常见错误类型记入日志，方便问题排查，返回服务的错误代码 errorcode 为 1,表示服务没有挂, 只有当未知错误发生，服务本身出现严重问题，才返回 errorcode 为 0， 表示服务挂了（原因：我们服务大多数时候都需要调用其他接口，当其其他服务接口异常的时候，不写try的话，我们服务会报程序异常错误，导致健康检查异常，不断重启服务）
    日志记录规范、全面，尤其针对一些可以排查问题的语句，必须写入日志（如：查询接口查询到的信息，必须记录日志）
    调用外侧的API接口的时候，timeout超时时间写长一些
4、API健康检查：针对常见的错误类型，比如，原子服务失败 108，服务内部失败 500，请求入参格式错误 400，返回标准化的 HTTP 错误代码
5、测试代码：
    上线前准备好能够验证上线成功的数据
6、开发代码：
    增加注释提升代码可读性
    通过配置文件切换代码的测试和上线版本，测试人员不改动代码逻辑
